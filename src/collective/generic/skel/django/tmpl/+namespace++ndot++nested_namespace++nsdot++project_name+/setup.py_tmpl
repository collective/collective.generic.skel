#!/usr/bin/env python
# -*- coding: utf-8 -
import os
from setuptools import setup, find_packages
name = '${namespace}${ndot}${nested_namespace}${nsdot}${project_name}'
version = "${str($version) or "1.0"}dev"


def read(*rnames):
    return open(
        os.path.join('.', *rnames)
    ).read()


long_description = "\n\n".join(
    [read('README.rst'),
     read('docs', 'INSTALL.rst'),
     read('docs', 'CHANGES.rst')]
)
EPS = {
    'paste.app_factory': [
        'main=${namespace}${ndot}${nested_namespace}${nsdot}${project_name}:main',
    ],
}

name = '${namespace}${ndot}${nested_namespace}${nsdot}${project_name}'
setup(
    name=name,
    namespace_packages=[
#if $namespace:
         '${namespace}',
#elif $nested_namespace:
         '${namespace}${ndot}${nested_namespace}'
#end if
    ],
    version=version
    description='$description',
    long_description='',
    author='$author',
    author_email='$author_email',
    license='$license_name',
    keywords='$keywords',
#if $homepage
    url='$homepage',
#else
    url='http://pypi.python.org/pypi/%s' % name,
#end if
    install_requires=[
        'setuptools',
#for i in $python_eggs
        "$i",
#end for
    ],
    classifiers=[
        'Development Status :: 4 - Beta',
        'Environment :: Web Environment',
        'Intended Audience :: Developers',
        'License :: OSI Approved :: BSD License',
        'Operating System :: OS Independent',
        'Programming Language :: Python',
    ],
    packages=find_packages('src'),
    package_dir={'': 'src'},
    # Make setuptools include all data files under version control,
    # svn and CVS by default
    include_package_data=True,
    zip_safe=False,
    ### Tells setuptools to download setuptools_git before running setup.py so
    ### it can find the data files under Hg version control.
    ###setup_requires=['setuptools_hg'],
    extras_require={'test': ['IPython', 'zope.testing', 'mocker']},
    entry_points=EPS,
)


