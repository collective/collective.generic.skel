[buildout]
package-extras = [test]
package-name = ${pdn}
develop = .
parts +=
    omelette
    zopepy
    test
    coverage
    test-scripts
    report
    report-html
    report-annotate
    report-xml
    release
#if $with_ploneproduct_solr
    solr-download
    solr-instance
#end if
extensions =
    mr.developer
    buildout.dumppickedversions
common-eggs =
    Pillow
    ipython
    bpython
test-eggs =
    \${buildout:package-name} \${buildout:package-extras}

[remotes]
# Plone
plone = git://github.com/plone
plone_push = git@github.com:plone
svn_plone = https://svn.plone.org/svn/plone
#svn_plone = http://svn.plone.org/svn/plone

# Collective
collective = git://github.com/collective
collective_push = git@github.com:collective
svn_collective = https://svn.plone.org/svn/collective
#svn_collective = http://svn.plone.org/svn/collective

# Zope
zope = http://svn.zope.org/repos/main
#zope = svn+ssh://svn.zope.org/repos/main
zopegit = git://github.com/zopefoundation

[sources]
zopeskel=svn https://svn.plone.org/svn/collective/ZopeSkel/trunk
experimental.catalogqueryplan = svn https://svn.plone.org/svn/collective/experimental.catalogqueryplan/trunk
Products.MemoryProfiler = svn https://svn.plone.org/svn/collective/Products.MemoryProfiler/trunk
Products.Gloworm = git https://github.com/kiorky/Products.Gloworm.git
templer.core                = git \${remotes:collective}/templer.core.git pushurl=\${remotes:collective_push}/templer.core.git
templer.buildout            = git \${remotes:collective}/templer.buildout.git pushurl=\${remotes:collective_push}/templer.buildout.git
templer.zope                = git \${remotes:collective}/templer.zope.git pushurl=\${remotes:collective_push}/templer.zope.git
templer.plone               = git \${remotes:collective}/templer.plone.git pushurl=\${remotes:collective_push}/templer.plone.git
templer.dexterity           = git \${remotes:collective}/templer.dexterity.git pushurl=\${remotes:collective_push}/templer.dexterity.git
templer.plonebuildout       = git \${remotes:collective}/templer.plonebuildout.git pushurl=\${remotes:collective_push}/templer.plonebuildout.git
templer.silva               = git \${remotes:collective}/templer.silva.git pushurl=\${remotes:collective_push}/templer.silva.git
templer.localcommands       = git \${remotes:collective}/templer.localcommands.git pushurl=\${remotes:collective_push}/templer.localcommands.git
templer.plone.localcommands = git \${remotes:collective}/templer.plone.localcommands.git pushurl=\${remotes:collective_push}/templer.plone.localcommands.git
templer.plonecore           = svn https://svn.plone.org/svn/collective/templer.plonecore/trunk



[instance]
http-address = $address:$http_port
eggs =
    \${buildout:common-eggs}
    \${buildout:package-name}
extra-paths =

[release]
recipe=zc.recipe.egg   
eggs = \${zopepy:eggs}
    collective.dist
    zest.releaser
scripts =
    fullrelease
    postrelease
    lasttagdiff
    prerelease
    release
    longtest
    rst2html.py
    rst2latex.py
    rst2newlatex.py
    rst2pseudoxml.py
    rst2s5.py
    rst2xml.py
    rstpep2html.py

[zopepy]
recipe=zc.recipe.egg
eggs = \${instance:eggs}
extra-paths = \${instance:extra-paths}
interpreter = zopepy
scripts =

[test]
recipe = zc.recipe.testrunner
defaults = ['-v', '-s', '\${buildout:package-name}']
eggs =
    \${buildout:common-eggs}
    \${buildout:test-eggs}

[coverage]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage
initialization =
    include = '--source=\${buildout:directory}/src'
    sys.argv = sys.argv[:] + ['run', include, 'bin/test', '--all']

[report]
<=coverage
scripts = coverage=report
initialization =
    sys.argv = sys.argv[:] + ['report', '-i']

[report-html]
<=coverage
scripts = coverage=report-html
initialization =
    sys.argv = sys.argv[:] + ['html', '-i']

[report-xml]
<=coverage
scripts = coverage=report-xml
initialization =
    sys.argv = sys.argv[:] + ['xml', '-i']

[report-annotate]
<=coverage
scripts = coverage=report-annotate
initialization =
    sys.argv = sys.argv[:] + ['annotate', '-i']

[test-scripts]
<=zopepy
interpreter=zopepy.test
env-file=test.env
eggs=
    \${buildout:test-eggs}
    \${zopepy:eggs}

[omelette]
recipe = collective.recipe.omelette
eggs = \${instance:eggs}
#packages = ./

[versions]
#for section in $p4_versions:
\# $section
#for version in $p4_versions[section]:
#if $version[0].startswith('#'):
$version[0]
#else
#$version[0] = $version[1]
#end if
#end for
#end for

[tools]
recipe=minitage.recipe.scripts
eggs=
    i18ndude
    babel
    sphinx
    zopeskel
    toutpt.zopeskel
    templer.dexterity
    templer.buildout
    templer.plone
    templer.plone.localcommands
    templer.zope
scripts=
    i18ndude
    pybabel
    templer
    paster


[versions]
# never ever pin paste and other eggs
Paste =
PasteDeploy =
PasteScript =
ZopeSkel =
distribute =

#if $with_ploneproduct_solr
[versions]
collective.recipe.solrinstance = 3.6
gocept.download = 0.9.5

[solr-download]
recipe = gocept.download
strip-top-level-dir = true
url = http://mirror.softaculous.com/apache/lucene/solr/3.6.0/apache-solr-3.6.0.tgz
md5sum = ac11ef4408bb015aa3a5eefcb1047aec

[solr-instance]
recipe = collective.recipe.solrinstance
solr-location = \${solr-download:location}
host = 127.0.0.1
port = 8983
basepath = /solr
maxWarmingSearchers = 1
# autoCommitMaxTime = 900000
default-search-field = default
default-operator = and
unique-key = UID
java_opts =
  -Dcom.sun.management.jmxremote
  -Djava.rmi.server.hostname=\${solr-instance:host}
  -Dcom.sun.management.jmxremote.port=8984
  -Dcom.sun.management.jmxremote.ssl=false
  -Dcom.sun.management.jmxremote.authenticate=false
  -server
  -Xms128M
  -Xmx256M

index =
#    name:allowedRolesAndUsers type:string stored:false multivalued:true
#    name:created          type:date stored:true
#    name:Creator          type:string stored:true
#    name:Date             type:date stored:true
#    name:default          type:text indexed:true stored:false multivalued:true
#    name:Description      type:text copyfield:default stored:true
#    name:effective        type:date stored:true
#    name:exclude_from_nav type:boolean indexed:false stored:true
#    name:expires          type:date stored:true
#    name:getIcon          type:string indexed:false stored:true
#    name:getId            type:string indexed:false stored:true
#    name:getRemoteUrl     type:string indexed:false stored:true
#    name:is_folderish     type:boolean stored:true
#    name:Language         type:string stored:true
#    name:modified         type:date stored:true
#    name:object_provides  type:string stored:false multivalued:true
#    name:path_depth       type:integer indexed:true stored:false
#    name:path_parents     type:string indexed:true stored:false multivalued:true
#    name:path_string      type:string indexed:false stored:true
#    name:portal_type      type:string stored:true
#    name:review_state     type:string stored:true
#    name:SearchableText   type:text copyfield:default stored:false
#    name:searchwords      type:string stored:false multivalued:true
#    name:showinsearch     type:boolean stored:false
#    name:Subject          type:string copyfield:default stored:true multivalued:true
#    name:Title            type:text copyfield:default stored:true
#    name:Type             type:string stored:true
#    name:UID              type:string stored:true required:true
#end if


