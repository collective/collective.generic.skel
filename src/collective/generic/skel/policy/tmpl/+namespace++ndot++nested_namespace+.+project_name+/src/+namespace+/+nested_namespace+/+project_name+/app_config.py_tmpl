#-*- coding: utf-8 -*-
"""Specific project configuration."""
GLOBALS = globals()

#import re



$hr
# Products that have entries in quickinstaller,
# here are their 'id' (not the translated name)
$hr

PRODUCT_DEPENDENCIES = (\
#for var in $qi:
#$var
#for product in $qi[$var]:
#if re.match('\s*#.*', $product):
$product
#else
     '$product',
#end if
#end for

#end for
)

EXTENSION_PROFILES = ('${namespace}${ndot}${nested_namespace}.${project_name}:default',)

SKIN = '${namespace}${ndot}${nested_namespace}.skin'
HIDDEN_PRODUCTS = [u'plone.app.openid', u'NuPlone',
#for var in $qi:
#$var
#for product in $qi[$var]:
#if re.match('\s*#.*', $product):
$product
#else
     '$product',
#end if
#end for

#end for     
#for package, profile, order in $gs
      u'${package}',
#end for
#if $with_ploneproduct_cjqui
      u'collective.js.jqueryui',
#end if
    #for var in $hqi:
    #$var
    #for product in $hqi[$var]:
    #if re.match('\s*#.*', $product):
    $product
    #else
    u'$product',
    #end if
    #end for
    #end for
    u'${namespace}${ndot}${nested_namespace}.skin',
    u'${namespace}${ndot}${nested_namespace}.tma',
    u'${namespace}${ndot}${nested_namespace}.${project_name}.migrations.v1_1',
    u'${namespace}${ndot}${nested_namespace}.${project_name}.migrations',
#if $with_ploneproduct_atschemaeditor:
    u'ATSchemaEditorNG',
    u'Products.ATSchemaEditorNG',
#end if    
#if $with_ploneproduct_agridfield
    u'DataGridField',
    u'Products.DataGridField',
#end if    
#if $with_ploneproduct_facultystaff or $with_ploneproduct_membrane
    u'Relations',
    u'Products.Relations',
#end if   
#if $with_ploneproduct_facultystaff:
    u'FacultyStaffDirectory',
    u'Products.FacultyStaffDirectory',
#end if  
#if $with_ploneproduct_quaestrio:
    u'Products.Quaestrio',
    u'Quaestrio',
#end if 
#if $with_ploneproduct_csvreplica:
    u'csvreplicata',
    u'Products.csvreplicata',
#end if
#if $major < 4:
#if $with_ploneproduct_cachesetup
    u'CMFSquidTool',
    u'Products.CMFSquidTool',
#end if      
#end if       
]
HIDDEN_PROFILES = [u'plone.app.openid', u'NuPlone',
    u'${namespace}${ndot}${nested_namespace}.skin',
    u'${namespace}${ndot}${nested_namespace}.tma',
    u'${namespace}${ndot}${nested_namespace}.${project_name}.migrations.v1_1',
    u'${namespace}${ndot}${nested_namespace}.${project_name}.migrations',
#for package, profile, order in $gs
      u'${package}',
#end for 
#if $with_ploneproduct_atschemaeditor:
    u'ATSchemaEditorNG',
    u'Products.ATSchemaEditorNG',
#end if    
#if $with_ploneproduct_agridfield
    u'DataGridField',
    u'Products.DataGridField',
#end if    
#if $with_ploneproduct_facultystaff or $with_ploneproduct_membrane
    u'Relations',
    u'Products.Relations',
#end if   
#if $with_ploneproduct_facultystaff:
    u'FacultyStaffDirectory',
    u'Products.FacultyStaffDirectory',
#end if  
#if $with_ploneproduct_quaestrio:
    u'Products.Quaestrio',
    u'Quaestrio',
#end if 
#if $with_ploneproduct_csvreplica:
    u'csvreplicata',
    u'Products.csvreplicata',
#end if
#if $major < 4:
#if $with_ploneproduct_cachesetup
    u'CMFSquidTool',
    u'Products.CMFSquidTool',
#end if       
#end if       

#if $with_ploneproduct_cjqui
      u'collective.js.jqueryui',
#end if
]

#if $with_ploneproduct_ldap:
LDAP_CONFIGURED = False
LDAP_PARAMETERS = {
                   'pluginid': "mcldap",
                   'title': "LDAP Makina Corpus",
                   'LDAP_server': "ldap.makina-corpus.net:389",
                   'login_attr': "uid",
                   'uid_attr': "uid",
                   'users_base': "ou=people,dc=mcjam,dc=org",
                   'users_scope': 2,
                   'roles': "Anonymous,Member",
                   'groups_base': "ou=group,dc=mcjam,dc=org",
                   'groups_scope': 2,
                   'binduid': "uid=yourid,ou=People,dc=mcjam,dc=org",
                   'bindpwd': "yourpassword",
                   'binduid_usage': 1,
                   'rdn_attr': 'cn',
                   'local_groups': 0,
                   'use_ssl': 0,
                   'encryption': 'SHA',
                   'read_only' :1,
                   'userobjectclasses': ["inetOrgPerson","inetLocalMailRecipient"],
                   'actives': ["IAuthenticationPlugin",
                             "IGroupEnumerationPlugin",
                             "IGroupIntrospection",
                             "IGroupsPlugin",
                             "IPropertiesPlugin",
                             "IUserEnumerationPlugin"]
            }
LDAP_TEST_PARAMETERS = {
    'testuser1': {
        'userid': 'anyvalidid',
        'password': 'correspondingpassword'
    },
}

#end if
from zope.interface import implements
from Products.CMFQuickInstallerTool.interfaces import INonInstallable as INonInstallableProducts
from Products.CMFPlone.interfaces import INonInstallable as INonInstallableProfiles

class HiddenProducts(object):
    implements(INonInstallableProducts)

    def getNonInstallableProducts(self):
        return HIDDEN_PRODUCTS

class HiddenProfiles(object):
    implements(INonInstallableProfiles)

    def getNonInstallableProfiles(self):
        return [ u'plone.app.openid', u'NuPlone', ]
