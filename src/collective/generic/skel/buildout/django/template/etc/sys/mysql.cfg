[buildout]
buildout:directory}/var/backups"
mysql-parts =
    supervisor
    mycnf-conf
    automysqlbackup
    automysqlbackup-conf
    mysqld-safe
    mysql-bin
    mysql-admin
    mysql-dump
mysql-init-parts=
    mysql_install_db
    restart_mysql
    mysql_default_settings
    mysql_initdb
mysql-crons=
    crontab_mysql_backup_daily
    crontab_mysql_backup_weekly
mysql-programs=
    80 mysql ${buildout:directory}/bin/pidproxy [${mycnf:pid} ${locations:mysql_bin}/mysqld_safe ${mycnf:opt}] true ${users:django}

[mycnf]
charset=utf8
collation-server = utf8_unicode_ci
collation=${mycnf:collation-server}
key_buffer = 64MB
query_cache_size  = 64MB
query_cache_limit = 4MB
table_cache = 512
sort_buffer_size= 32MB
tmp_table_size= 64MB
max_allowed_packet= 16M
thread_stack = 192K
thread_cache_size= 8
myisam-recover= BACKUP
query_cache_limit = 1M
query_cache_size  = 16M
max_allowed_packet	= 30M
database=${settings:mysql_database}
basedir= ${locations:mysql}
datadir=${buildout:directory}/var/mysql
pid=${mycnf:datadir}/mysql.pid
err = ${buildout:directory}/var/log/mysql.err
sock = ${mycnf:datadir}/mysql.sock
user = ${users:django}
host=${hosts:mysql}
port=${ports:mysql}
password = ${passwords:mysql}
opt = --defaults-file=${mycnf-conf:output} --pid-file=${mycnf:pid} --skip-syslog

[mycnf-conf]
recipe = collective.recipe.template[genshi]
input = ${buildout:directory}/etc/templates/mysql/my.cnf.in
output = ${buildout:directory}/etc/my.cnf

[automysqlbackup-conf]
recipe = collective.recipe.template[genshi]
input = ${buildout:directory}/etc/templates/mysql/automysqlbackup.conf.in
output = ${buildout:directory}/etc/automysqlbackup.conf
DBS=${mycnf:database}

[mysql-bin]
mode=750
recipe = collective.recipe.template[genshi]
input = ${buildout:directory}/etc/templates/mysql/mysql.in
output = ${buildout:directory}/bin/mysql

[mysql-admin]
mode=750
recipe = collective.recipe.template[genshi]
input = ${buildout:directory}/etc/templates/mysql/mysqladmin.in
output = ${buildout:directory}/bin/mysqladmin

[mysql-dump]
mode=750
recipe = collective.recipe.template[genshi]
input = ${buildout:directory}/etc/templates/mysql/mysqldump.in
output = ${buildout:directory}/bin/mysqldump

[mysqld-safe]
mode=750
recipe = collective.recipe.template[genshi]
input = ${buildout:directory}/etc/templates/mysql/mysqld_safe_run_as_user.in
output = ${buildout:directory}/bin/mysqld_safe_run_as_user

[automysqlbackup]
mode=750
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/etc/templates/mysql/automysqlbackup
output = ${buildout:directory}/bin/automysqlbackup

[chown]
command +=
    chown -R ${users:django}:${users:group} ${buildout:directory}/var/mysql

[mysql_install_db]
recipe = plone.recipe.command
command =
    if [ ! -d ${buildout:directory}/var/backups ];then mkdir -pv ${buildout:directory}/var/backups;fi
    if [ ! -d ${buildout:directory}/var/tmp ];then mkdir -pv ${buildout:directory}/var/tmp;fi
    if [ ! -d ${buildout:directory}/var/log ];then mkdir ${buildout:directory}/var/log;fi
    if [ ! -d ${mycnf:datadir} ];then mkdir -pv ${mycnf:datadir}; ${locations:mysql_bin}/mysql_install_db --basedir=${locations:mysql} --datadir=${mycnf:datadir} --user=${users:django} --general-log=${buildout:directory}/var/log;fi
    echo "---------------------------------------------------------------------"
    echo "When you have problems running mysqld mind appamor and access rights."
    echo "---------------------------------------------------------------------"
update-command=${mysql_install_db:command}

[mysql_default_settings]
recipe = plone.recipe.command
command =
    mysql="${buildout:directory}/bin/mysql";
    if [ ! -f "${mycnf:datadir}/.mysql_default_settings" ];then
        if [ -f ${mycnf:pid} ];then
            echo "use mysql;SET PASSWORD FOR 'root'@'localhost' = PASSWORD('${mycnf:password}'); SET PASSWORD FOR 'root'@'127.0.0.1' = PASSWORD('${mycnf:password}'); SET PASSWORD FOR 'root'@'::1' = PASSWORD('${mycnf:password}'); SET PASSWORD FOR 'root'@'host_name' = PASSWORD('${mycnf:password}');flush privileges;"| $mysql -u root -f --password=''
            fail2="$?";
            if [ "$fail2" = "0" ];then touch "${mycnf:datadir}/.mysql_default_settings";fi;
        fi;
    fi
update-command=${mysql_default_settings:command}

[mysql_initdb]
recipe = plone.recipe.command
update-command=${mysql_initdb:command}
command =
    mysql="${buildout:directory}/bin/mysql"
    if [ ! -f ${mycnf:datadir}/.mysql_initdb_c ];then
    echo 'CREATE DATABASE ${mycnf:database} CHARACTER SET = UTF8;'|$mysql -u root mysql
    if [ "$?" = "0" ];then touch ${mycnf:datadir}/.mysql_initdb_c;fi
    fi
    if [ ! -f ${mycnf:datadir}/.mysql_initdb_p ];then
    echo "delete from user where user='';
    grant all privileges on ${mycnf:database}.* to '${mycnf:user}'@'%' IDENTIFIED BY '${mycnf:password}';
    flush privileges;"|$mysql -u root mysql && touch ${mycnf:datadir}/.mysql_initdb_p;
    fi

[crontab_mysql_backup_daily]
recipe = z3c.recipe.usercrontab
times = 0 1 * * *
command = ${buildout:directory}/bin/automysqlbackup -c ${buildout:directory}/etc/automysqlbackup.conf

[crontab_mysql_backup_weekly]
recipe = z3c.recipe.usercrontab
times = 0 2 * * 6
command = ${buildout:directory}/bin/automysqlbackup -c ${buildout:directory}/etc/automysqlbackup.conf

[restart_mysql]
recipe = plone.recipe.command
update-command=${restart_mysql:command}
command =
    ${buildout:directory}/bin/supervisorctl stop mysql;
    ${buildout:directory}/bin/supervisorctl start mysql;
    sleep 10

[mkdirs]
command +=
     mkdir -pv ${locations:mysql_backup}

# To be overidden in settings.cfg

[hosts]
mysql=127.0.0.1

[ports]
mysql=30015

[passwords]
mysql=${passwords:admin}

[locations]
mysql_bin=${locations:mysql}/bin
mysql=/usr
mysql_backup=${buildout:directory}/var/mysql/backups

[settings]
