# Sysadmin settings like hosts, credentials, paths, cache settings, and loglevels
#if $with_haproxy
#set $hapcomment = ''
#else:
#set $hapcomment = '#'
#end if
#if $with_ploneproduct_etherpad
#set $etherpadcomment = ''
#else:
#set $etherpadcomment = '#'
#end if
#if $with_supervisor_instance1
#set $si1='true'
#else:
#set $si1='false'
#end if
#if $with_supervisor_instance2
#set $si2='true'
#else:
#set $si2='false'
#end if
#if $with_supervisor_instance3
#set $si3='true'
#else:
#set $si3='false'
#end if
#if $with_supervisor_instance4
#set $si4='true'
#else:
#set $si4='false'
#end if

[v]
# plone settings
admin-user = $zope_user
admin-password = $zope_password
project = ${project}
proxycache_size = 256M
anon_cache_time = 600s
autostart_${first_instance} = $si1
#if $with_supervisor_instance2
autostart_instance2 = $si2
#end if
#if $with_supervisor_instance3
autostart_instance3 = $si3
#end if
#if $with_supervisor_instance4
autostart_instance4 = $si4
#end if
#if $with_ploneproduct_paasync
autostart_instancewk = true
#end if
# plone site id
plonesite = $plonesite
# zope settings
zeo-pack-days=0
z2-log-level = INFO
event-log-level = INFO
#debug mode
debug = off
verbose-security = off
# zeo cache settings
zeo-client-cache-size = 80MB
session-timeout-minutes = 90
#system user & group
sys-user = \${env:USER}
sys-group = \${grp:GROUP}
#if $with_cache_support
varnish-debug = \${v:debug}
\#varnish max age rewrite support
rewrite-max-age = false
#end if
#if $with_supervisor
supervisor-user = \${v:admin-user}
supervisor-password = \${v:admin-password}
#end if
# reverse proxy settings
reverse-proxy-listen = *
reverse-proxy-scheme = $reverseproxy_scheme
reverse-proxy-host = $reverseproxy_host
reverse-proxy-edit-host = $reverseproxy_edit_host
reverse-proxy-port = $reverseproxy_port
# QA settings
package-min-coverage = 80
flake8-ignore = C901
flake8-max-complexity=1000
pre-commit-hook = True

[hosts]
ip = 127.0.0.1
#webdav = \${hosts:address}
address = $address
syslog = \${hosts:ip}
zeo = \${hosts:ip}
#if $with_supervisor
supervisor = \${hosts:ip}
#end if
#if $with_haproxy
balancer = \${hosts:ip}
#end if
#if $with_cache_support
varnish = \${hosts:ip}
#end if
instance = \${hosts:address}
#if $with_supervisor_instance1
instance1 = \${hosts:address}
#end if
#if $with_supervisor_instance2
instance2 = \${hosts:address}
#end if
#if $with_supervisor_instance3
instance3 = \${hosts:address}
#end if
#if $with_supervisor_instance4
instance4 = \${hosts:address}
#end if
#if $with_ploneproduct_etherpad
etherpad = \${hosts:address}
#end if
#if $with_ploneproduct_paasync
instance-worker = \${hosts:address}
#end if
#if $with_cache_support
varnish =  \${hosts:ip}
varnish-telnet =  \${hosts:ip}
zope-front = \${hosts:varnish}
#if $with_haproxy
#zope-front = \${hosts:balancer}
#zope-front = \${hosts:${first_instance}}
cache-backend = \${hosts:balancer}
#cache-backend = \${hosts:${first_instance}}
#else
#zope-front = \${hosts:${first_instance}}
cache-backend = \${hosts:${first_instance}}
#cache-backend = \${hosts:balancer}
#end if
#else if $with_haproxy
zope-front = \${hosts:balancer}
#zope-front = \${hosts:${first_instance}}
#else
zope-front = \${hosts:${first_instance}}
#end if

[ports]
#if $with_supervisor
supervisor = $http_port
#end if
zeo = $http_port1
instance = $http_port3
#webdav = $http_port10
#if $with_haproxy
balancer = $http_port2
#end if
#if $with_supervisor_instance1
instance1 = $http_port4
#end if
#if $with_supervisor_instance2
instance2 = $http_port5
#end if
#if $with_supervisor_instance3
instance3 = $http_port6
#end if
#if $with_supervisor_instance4
instance4 = $http_port7
#end if
#if $with_ploneproduct_paasync
instance-worker = $http_port8
workermonitor = $http_port11
#end if
#if $with_ploneproduct_etherpad
etherpad = $http_port12
#end if
#if $with_cache_support
varnish = $http_port13
varnish-telnet = $http_port14
zope-front = \${ports:varnish}
#if $with_haproxy
#zope-front = \${ports:balancer}
#zope-front = \${ports:${first_instance}}
cache-backend = \${ports:balancer}
#cache-backend = \${ports:${first_instance}}
#else
#zope-front = \${ports:${first_instance}}
cache-backend = \${ports:${first_instance}}
#cache-backend = \${ports:balancer}
#end if
#else if $with_haproxy
zope-front = \${ports:balancer}
#zope-front = \${ports:${first_instance}}
#else
zope-front = \${ports:${first_instance}}
#end if

[crons]
# at 3:00am NO WHITESPACE!!!
# at 1:03am
zope-restart = 15 1 * * *
zope-pack = 30 1 * * *
# at 1:05am
repozo-daily = 05 1 * * *
# only sunday at 1:10am
repozo-weekly = 10 1 * * 6
# number of backups to rotate
nb_backups_to_keep = 35
# number of  fimm backups to rotate
nb_fullbackups_to_keep = 5

[locations]
# absolute paths to avoid buildout auto build of reffered part
tmp = \${buildout:directory}/var/tmp
blob-storage = \${buildout:directory}/var/blobstorage/storage
blob-backup = \${buildout:directory}/var/blobstorage/backup

# vim:set ft=cfg:
